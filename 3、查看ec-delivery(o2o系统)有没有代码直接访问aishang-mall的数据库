3、查看ec-delivery(o2o系统)有没有代码直接访问aishang-mall的数据库
	delivery 不连
	bsi 连  亿起发相关代码,这功能就没上过线不用管
	fcc 连  
	      MyOrderServiceImpl 大量的dao2访问数据库 
		      MyOrderController myOrder
		      					findMyOrderByPage2
		      					findMyOrderByPage4Or6
		      					querySendInfo
		      					findWxGoodsSku
		      					changeFlower
		      					getFlowersByCategory
		      					doSendOrderF
		      					toPrintPeriod
		      					showOrderDetail
		      					uploadExcel
		      					exportExcel
		      					showLogDetail





          JiuyeSCMService     打单有关,相关代码新operation已经挪过去了，所以不用管

          OrderThirdShopAimallServiceImpl    里面只是引用了aimall的dao,所以不用管


4、退款功能                 http://jira.iishang.cn/browse/OPER-363



其他：
  1、防并发：version  为什么要做这个事情

    1)首先理解什么是StaleObjectStateException
       hibernate乐观锁，能自动检测多个事务对同一条数据进行的操作，并根据先胜原则，提交第一个事务，其他的事务提交时则抛出org.hibernate.staleobjectstateexception异常。

  	接着确认可能会抛StaleObjectStateException异常的业务。

  	简单说就是会频繁更新某个表某行数据的业务,如商品的库存变动，只要生成订单就会减一下库存并保存商品数据，当有大量并发情况下会有大量订单生成不了,因为生成订单时候要减库存，而减库存就可能报这个错。
  	接着说如扣减库存这个动作,不直接对商品的库存做加减法然后再保存商品数据,可以先创建一条状态是TODO的库存流水里面记录了商品id和加减数量,然后由定时任务去完成流水对库存的修改,这样创建订单的时候不会因为订单对同一个商品扣减库存引起StaleObjectStateException的异常。
    

    2)不需要版本控制的业务如果还频繁报这个错误，可以考虑直接删掉这个表的乐观锁字段。


  2、事务重新整理
  	1)目前发现的是自定义主键的表如订单表,子订单表,发货单表这些表的数据不受spring事务管理,需要解决




